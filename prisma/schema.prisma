// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id           String   @id @default(uuid())
  name         String
  username     String   @unique
  email        String   @unique
  passwordHash String   @map("password_hash")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  // Relations
  profile   UserProfile?
  waterLogs WaterLog[]

  @@map("users")
}

model UserProfile {
  id               String         @id @default(uuid())
  userId           String         @unique @map("user_id")
  weight           Decimal        @db.Decimal(5, 2)
  activityLevel    ActivityLevel  @map("activity_level")
  weatherCondition WeatherCondition @map("weather_condition")
  dailyGoal        Decimal        @map("daily_goal") @db.Decimal(6, 2)
  createdAt        DateTime       @default(now()) @map("created_at")
  updatedAt        DateTime       @updatedAt @map("updated_at")

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("user_profiles")
}

model WaterLog {
  id        String   @id @default(uuid())
  userId    String   @map("user_id")
  amount    Decimal  @db.Decimal(6, 2)
  loggedAt  DateTime @default(now()) @map("logged_at")
  createdAt DateTime @default(now()) @map("created_at")

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("water_logs")
}

enum ActivityLevel {
  sedentary
  light
  moderate
  active
  very_active
}

enum WeatherCondition {
  cool
  mild
  warm
  hot
}